[
["index.html", "PHYS 225 Labs Chapter 1 Introduction 1.1 Error Analysis lab file", " PHYS 225 Labs Compiled by Shovit Bhari 2020-08-11 Chapter 1 Introduction This is collection of data tables and figures for all the 225L conducted over Summer 2020 in Pivot Interactives. Physics Labs. 1.1 Error Analysis lab file Error Analysis "],
["lab2-position-velocity-and-acceleration.html", "Chapter 2 Lab2: Position, Velocity, and Acceleration 2.1 Part1: Motion of the glider 2.2 Plots using ggplot 2.3 Part2: Acceleration of a Turbine-Powered Glider 2.4 Plots using ggplot", " Chapter 2 Lab2: Position, Velocity, and Acceleration 2.1 Part1: Motion of the glider Mass of the glider, m= 0.80 kg and the strenth of fan force was selected to level 3. 2.1.1 Data time &lt;- seq(0,0.9, by=0.1) Position&lt;- c(0,0.02,0.06, 0.115, 0.19, 0.29, 0.4, 0.53, 0.68, 0.84) Velocity &lt;- c(0,0.3,0.475, 0.65, 0.875, 1.05, 1.2, 1.4, 1.55,NA) 2.1.2 Creating a data table data &lt;- data.frame(time, Position, Velocity) data ## time Position Velocity ## 1 0.0 0.000 0.000 ## 2 0.1 0.020 0.300 ## 3 0.2 0.060 0.475 ## 4 0.3 0.115 0.650 ## 5 0.4 0.190 0.875 ## 6 0.5 0.290 1.050 ## 7 0.6 0.400 1.200 ## 8 0.7 0.530 1.400 ## 9 0.8 0.680 1.550 ## 10 0.9 0.840 NA 2.1.3 Plotting Position vs. Time plot(data$time, data$Position,main=&quot;Position vs. Time&quot;, xlab=&quot;Time&quot;, ylab=&quot;Position&quot; ) 2.1.4 Plotting Velocity vs. Time fit2&lt;- lm(Velocity~time, data) plot(data$time, data$Velocity, main=&quot;Velocity vs. Time&quot;, xlab=&quot;Time&quot;, ylab=&quot;Velocity&quot;) abline(fit2) 2.1.5 Fitting the linear regression model and extracting the coefficients summary(fit2) ## ## Call: ## lm(formula = Velocity ~ time, data = data) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.076667 -0.011667 0.005833 0.027500 0.041667 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.07667 0.02514 3.05 0.0186 * ## time 1.89167 0.05280 35.83 3.43e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.0409 on 7 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.9946, Adjusted R-squared: 0.9938 ## F-statistic: 1284 on 1 and 7 DF, p-value: 3.427e-09 summary(fit2)$coef ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.07666667 0.02513719 3.04993 1.858505e-02 ## time 1.89166667 0.05279866 35.82793 3.426689e-09 slope &lt;- round(summary(fit2)$coef[2,1],3) intercept&lt;- round(summary(fit2)$coef[1,1],3) errorintercept &lt;- round(summary(fit2)$coef[1,2],3) errorslope &lt;- round(summary(fit2)$coef[2,2],3) 2.2 Plots using ggplot 2.2.1 Position vs. Time g1&lt;- ggplot(data, aes(x=time, y=Position))+ geom_point(size = 2, colour = &quot;red&quot;, alpha=0.5)+ xlab(&quot;Time&quot;)+ ylab(&quot;Position&quot;) + ggtitle(&quot;Position vs. time&quot;) g1 ###Velocity vs. Time g2 &lt;- ggplot(data, aes(x=time, y=Velocity))+ geom_smooth(method = &quot;lm&quot;, colour = &quot;black&quot;) + xlab(&quot;Time&quot;)+ ylab(&quot;Velocity&quot;) + ggtitle(&quot;Velocity vs. time&quot;) + geom_point(size = 2, colour = &quot;blue&quot;, alpha=0.5) g2 \\[ v_o= 0.077 \\pm 0.025 \\frac{m}{s} \\] \\[ a= 1.892 \\pm 0.053 \\frac{m}{s^2} \\] 2.2.2 Exporting data as csv file. write.table(data, &quot;./ErrorAnalysis.csv&quot;) 2.3 Part2: Acceleration of a Turbine-Powered Glider Hereâ€™s the collected data time &lt;- seq(0,1.4, by=0.1) Position&lt;- c(0,0.23,0.428, 0.59, 0.72, 0.815, 0.88, 0.91, 0.905, 0.87,0.8, 0.695,0.56,0.385, 0.18) Velocity &lt;- c(NA,2.14,1.8,1.46,1.12, 0.8, 0.475, 0.125, -0.2, -0.525, -0.875,-1.2,-1.55,-1.72,NA) 2.3.1 Creating a data table data1 &lt;- data.frame(time, Position, Velocity) data1 ## time Position Velocity ## 1 0.0 0.000 NA ## 2 0.1 0.230 2.140 ## 3 0.2 0.428 1.800 ## 4 0.3 0.590 1.460 ## 5 0.4 0.720 1.120 ## 6 0.5 0.815 0.800 ## 7 0.6 0.880 0.475 ## 8 0.7 0.910 0.125 ## 9 0.8 0.905 -0.200 ## 10 0.9 0.870 -0.525 ## 11 1.0 0.800 -0.875 ## 12 1.1 0.695 -1.200 ## 13 1.2 0.560 -1.550 ## 14 1.3 0.385 -1.720 ## 15 1.4 0.180 NA 2.3.2 Plotting Position vs. Time plot(data1$time, data1$Position,main=&quot;Position vs. Time&quot;, xlab=&quot;Time&quot;, ylab=&quot;Position&quot; ) 2.3.3 Plotting Velocity vs. Time fit3&lt;- lm(Velocity~time, data1) plot(data1$time, data1$Velocity, main=&quot;Velocity vs. Time&quot;, xlab=&quot;Time&quot;, ylab=&quot;Velocity&quot;) abline(fit3) 2.3.4 Fitting the linear regression model and extracting the coefficients summary(fit3) ## ## Call: ## lm(formula = Velocity ~ time, data = data1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.047802 -0.017308 -0.009011 0.003791 0.111099 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.44462 0.02361 103.5 &lt;2e-16 *** ## time -3.28901 0.02974 -110.6 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.04013 on 11 degrees of freedom ## (2 observations deleted due to missingness) ## Multiple R-squared: 0.9991, Adjusted R-squared: 0.999 ## F-statistic: 1.223e+04 on 1 and 11 DF, p-value: &lt; 2.2e-16 summary(fit3)$coef ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.444615 0.02360802 103.5502 8.513850e-18 ## time -3.289011 0.02974331 -110.5798 4.136457e-18 slope1 &lt;- round(summary(fit3)$coef[2,1],3) intercept1&lt;- round(summary(fit3)$coef[1,1],3) errorintercept1 &lt;- round(summary(fit3)$coef[1,2],3) errorslope1 &lt;- round(summary(fit3)$coef[2,2],3) 2.4 Plots using ggplot 2.4.1 Position vs. Time g3&lt;- ggplot(data1, aes(x=time, y=Position))+ geom_point(size = 2, colour = &quot;red&quot;, alpha=0.5)+ xlab(&quot;Time&quot;)+ ylab(&quot;Position&quot;) + ggtitle(&quot;Position vs. time&quot;) g3 ###Velocity vs. Time g4 &lt;- ggplot(data1, aes(x=time, y=Velocity))+ geom_smooth(method = &quot;lm&quot;, colour = &quot;black&quot;) + xlab(&quot;Time&quot;)+ ylab(&quot;Velocity&quot;) + ggtitle(&quot;Velocity vs. time&quot;) + geom_point(size = 2, colour = &quot;blue&quot;, alpha=0.5) g4 \\[ v_o= 2.445 \\pm 0.024 \\frac{m}{s} \\] \\[ a= -3.289 \\pm 0.03 \\frac{m}{s^2} \\] "],
["lab-3-motion-of-objects-in-free-fall.html", "Chapter 3 Lab 3: Motion of Objects in Free Fall 3.1 Part I: Green Rubber Ball 3.2 Part II: Lead Ball 3.3 Part III: Large Steel Ball 3.4 Part IV: Small Steel Ball 3.5 Part V: Styrofoam Ball", " Chapter 3 Lab 3: Motion of Objects in Free Fall 3.1 Part I: Green Rubber Ball \\[m_1 = 80.8 \\pm 0.1 g \\] \\[ d_1 = 6.75 \\pm 0.01 cm \\] time &lt;- seq(0,0.75, by=0.05) Position&lt;- c(-0.6, -0.44, -0.3, -0.18, -0.09, -0.03, 0.01, 0.03, 0.02, -0.02, -0.07, -0.15, -0.26, -0.38, -0.54, -0.73) Velocity &lt;- c(NA, 3, 2.6, 2.1, 1.5, 1, 0.6, 0.1, -0.5, -0.9, -1, -1.9, -2.3, -2.8, -3.5, NA) 3.1.1 Part I: Data Table ## time Position Velocity ## 1 0.00 -0.60 NA ## 2 0.05 -0.44 3.0 ## 3 0.10 -0.30 2.6 ## 4 0.15 -0.18 2.1 ## 5 0.20 -0.09 1.5 ## 6 0.25 -0.03 1.0 ## 7 0.30 0.01 0.6 ## 8 0.35 0.03 0.1 ## 9 0.40 0.02 -0.5 ## 10 0.45 -0.02 -0.9 ## 11 0.50 -0.07 -1.0 ## 12 0.55 -0.15 -1.9 ## 13 0.60 -0.26 -2.3 ## 14 0.65 -0.38 -2.8 ## 15 0.70 -0.54 -3.5 ## 16 0.75 -0.73 NA Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.523077 0.07300707 48.25665 4.104652e-15 time -9.775824 0.17148492 -57.00690 5.602111e-16 \\[ v_o = 3.523 \\pm 0.073 \\frac{m}{s} \\] \\[ a = -9.776 \\pm 0.171 \\frac{m}{s^2} \\] 3.2 Part II: Lead Ball \\[m_2= 92.4 \\pm 0.1 g \\] \\[ d_2 = 2.5 \\pm 0.01 cm \\] time &lt;- seq(0,0.75, by=0.05) Position&lt;- c(-0.6, -0.44, -0.395, -0.19, -0.11, -0.04, 0.0, 0.02, 0.0, -0.04, -0.095, -0.18, -0.29, -0.42, -0.54, -0.77) Velocity &lt;- c(NA, 3.05, 2.5, 1.85, 1.5, 1.1, 0.6, 0.0, -0.6,-0.95, -1.4, -1.95, -2.4, -2.9, -3.5, NA) 3.2.1 Part II: Data Table ## time Position Velocity ## 1 0.00 -0.600 NA ## 2 0.05 -0.440 3.05 ## 3 0.10 -0.395 2.50 ## 4 0.15 -0.190 1.85 ## 5 0.20 -0.110 1.50 ## 6 0.25 -0.040 1.10 ## 7 0.30 0.000 0.60 ## 8 0.35 0.020 0.00 ## 9 0.40 0.000 -0.60 ## 10 0.45 -0.040 -0.95 ## 11 0.50 -0.095 -1.40 ## 12 0.55 -0.180 -1.95 ## 13 0.60 -0.290 -2.40 ## 14 0.65 -0.420 -2.90 ## 15 0.70 -0.540 -3.50 ## 16 0.75 -0.770 NA Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.482418 0.04310229 80.79427 8.617652e-18 time -9.876923 0.10124213 -97.55744 8.999660e-19 \\[ v_o = 3.482 \\pm 0.043 \\frac{m}{s} \\] \\[ a = -9.877 \\pm 0.101 \\frac{m}{s^2} \\] 3.3 Part III: Large Steel Ball \\[m_3 = 535.1 \\pm 0.1 g \\] \\[ d_3 = 5.08 \\pm 0.01 cm \\] time &lt;- seq(0,0.7, by=0.05) Position&lt;- c(-0.5, -0.36, -0.23, -0.13, -0.06, -0.01, 0.015, 0.03, 0.0, -0.05, -0.13, -0.22, -0.36, -0.48, -0.67) Velocity &lt;- c(NA, 2.7, 2.3, 1.7, 1.2, 0.75, 0.4, -0.15, -0.8,-1.3, -1.7, -2.3, -2.6, -3.1,NA) 3.3.1 Part III: Data Table ## time Position Velocity ## 1 0.00 -0.500 NA ## 2 0.05 -0.360 2.70 ## 3 0.10 -0.230 2.30 ## 4 0.15 -0.130 1.70 ## 5 0.20 -0.060 1.20 ## 6 0.25 -0.010 0.75 ## 7 0.30 0.015 0.40 ## 8 0.35 0.030 -0.15 ## 9 0.40 0.000 -0.80 ## 10 0.45 -0.050 -1.30 ## 11 0.50 -0.130 -1.70 ## 12 0.55 -0.220 -2.30 ## 13 0.60 -0.360 -2.60 ## 14 0.65 -0.480 -3.10 ## 15 0.70 -0.670 NA Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.211538 0.04766507 67.37719 9.551433e-16 time -9.813187 0.12010468 -81.70528 1.149914e-16 \\[ v_o = 3.212 \\pm 0.048 \\frac{m}{s} \\] \\[ a = -9.813 \\pm 0.12 \\frac{m}{s^2} \\] 3.4 Part IV: Small Steel Ball \\[m_4 = 8.6.1 \\pm 0.1 g \\] \\[ d_4 = 1.29 \\pm 0.01 cm \\] time &lt;- seq(0,0.75, by=0.05) Position&lt;- c(-0.6, -0.44, -0.305, -0.195, -0.105, -0.045, 0.0, 0.005, -0.005, -0.045, -0.1, -0.185, -0.295, -0.435, -0.59, -0.78) Velocity &lt;- c(NA, 2.95, 2.45, 2, 1.5, 1.05, 0.5, -0.05, -0.5,-0.95, -1.4, -1.95, -2.5, -2.95,-3.45,NA) 3.4.1 Part IV: Data Table ## time Position Velocity ## 1 0.00 -0.600 NA ## 2 0.05 -0.440 2.95 ## 3 0.10 -0.305 2.45 ## 4 0.15 -0.195 2.00 ## 5 0.20 -0.105 1.50 ## 6 0.25 -0.045 1.05 ## 7 0.30 0.000 0.50 ## 8 0.35 0.005 -0.05 ## 9 0.40 -0.005 -0.50 ## 10 0.45 -0.045 -0.95 ## 11 0.50 -0.100 -1.40 ## 12 0.55 -0.185 -1.95 ## 13 0.60 -0.295 -2.50 ## 14 0.65 -0.435 -2.95 ## 15 0.70 -0.590 -3.45 ## 16 0.75 -0.780 NA Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.461538 0.02054240 168.5070 1.282215e-21 time -9.859341 0.04825164 -204.3317 1.269624e-22 \\[ v_o = 3.462 \\pm 0.021 \\frac{m}{s} \\] \\[ a = -9.859 \\pm 0.048 \\frac{m}{s^2} \\] 3.5 Part V: Styrofoam Ball \\[m_5 = 8.6.1 \\pm 0.1 g \\] \\[ d_5 = 1.29 \\pm 0.01 cm \\] time &lt;- seq(0,0.75, by=0.05) Position&lt;- c(-0.6, -0.43, -0.29, -0.18, -0.10, -0.03, 0.01, 0.02, 0.01, -0.03, -0.08, -0.18, -0.27, -0.4,-0.55, -0.73) Velocity &lt;- c(NA, 3.1, 2.5, 1.9, 1.7, 1.1, 0.5, 0, -0.5,-0.9, -1.5, -1.9, -2.2, -2.8,-3.3,NA) 3.5.1 Part V: Data Table ## time Position Velocity ## 1 0.00 -0.60 NA ## 2 0.05 -0.43 3.1 ## 3 0.10 -0.29 2.5 ## 4 0.15 -0.18 1.9 ## 5 0.20 -0.10 1.7 ## 6 0.25 -0.03 1.1 ## 7 0.30 0.01 0.5 ## 8 0.35 0.02 0.0 ## 9 0.40 0.01 -0.5 ## 10 0.45 -0.03 -0.9 ## 11 0.50 -0.08 -1.5 ## 12 0.55 -0.18 -1.9 ## 13 0.60 -0.27 -2.2 ## 14 0.65 -0.40 -2.8 ## 15 0.70 -0.55 -3.3 ## 16 0.75 -0.73 NA Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.483516 0.0552395 63.06205 1.674526e-16 time -9.727473 0.1297510 -74.97030 2.111388e-17 \\[ v_o = 3.484 \\pm 0.055 \\frac{m}{s} \\] \\[ a = -9.727 \\pm 0.13 \\frac{m}{s^2} \\] g &lt;- c(slope1, slope2, slope3, slope4, slope5) gavg &lt;- mean(g) stdg &lt;- sd(g) dg &lt;- round(stdg/sqrt(5),3) \\[ g = -9.8104 \\pm 0.027 \\frac{m}{s^2} \\] "],
["lab-4-three-views-of-projectile-ball.html", "Chapter 4 Lab 4: Three Views of Projectile Ball 4.1 Data", " Chapter 4 Lab 4: Three Views of Projectile Ball 4.1 Data ## t x vx y vy ## 1 0.0 0.00 NA 1.00 NA ## 2 0.1 0.70 6.75 1.50 4.50 ## 3 0.2 1.35 6.50 1.90 3.25 ## 4 0.3 2.00 6.50 2.15 2.00 ## 5 0.4 2.65 6.50 2.30 1.25 ## 6 0.5 3.30 1.00 2.40 0.00 ## 7 0.6 4.00 6.75 2.30 -1.25 ## 8 0.7 4.65 6.75 2.15 -2.00 ## 9 0.8 5.30 6.50 1.90 -2.75 ## 10 0.9 5.95 6.50 1.60 -3.50 ## 11 1.0 6.50 6.00 1.20 -4.50 ## 12 1.1 NA NA 0.70 NA xt &lt;- lm(x~t, data) plot(t,x, xlab=&quot;Time&quot;, ylab=&quot;Horizontal Position&quot;, main = &quot;Horizontal Displacement&quot;) abline(xt) summary(xt)$coef ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.03636364 0.02044051 1.778998 1.089484e-01 ## t 6.54545455 0.03455077 189.444532 1.618403e-17 \\[ v_x = 6.545 \\pm 0.035 \\frac{m}{s} \\] vt &lt;- lm(vx~t, data) plot(t,vx, xlab=&quot;Time&quot;, ylab=&quot;Horizontal Velocity&quot;, main = &quot;Horizontal Velocity&quot;) abline(vt) summary(vt)$coef ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.98333333 1.276445 4.687497916 0.001566592 ## t -0.01515152 2.057177 -0.007365196 0.994303830 \\[ a = -0.015 \\pm 2.057 \\frac{m}{s^2} \\] plot(t,y, xlab=&quot;Time&quot;, ylab=&quot;Vertical Position&quot;, main = &quot;Vertical Displacement&quot;) vyt &lt;- lm(vy~t, data) plot(t,vy, xlab=&quot;Time&quot;, ylab=&quot;Vertical Velocity&quot;, main = &quot;Vertical Velocity&quot;) abline(vyt) summary(vyt)$coef ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.133333 0.1851835 27.72025 3.094896e-09 ## t -9.878788 0.2984502 -33.10028 7.571623e-10 \\[ v_o = 5.133 \\pm 0.185 \\frac{m}{s} \\] \\[ g = -9.879 \\pm 0.298 \\frac{m}{s^2} \\] "],
["lab-5modified-atwoods-machine-and-newtons-2nd-law.html", "Chapter 5 Lab 5:Modified Atwoodâ€™s Machine and Newtonâ€™s 2nd Law", " Chapter 5 Lab 5:Modified Atwoodâ€™s Machine and Newtonâ€™s 2nd Law t x y vx vy 1 0.00 0.000 0.425 NA NA 2 0.05 0.010 0.420 0.25 -0.15 3 0.10 0.025 0.410 0.35 -0.30 4 0.15 0.045 0.390 0.45 -0.45 5 0.20 0.070 0.365 0.60 -0.50 6 0.25 0.105 0.340 0.75 -0.65 7 0.30 0.145 0.300 0.85 -0.75 8 0.35 0.190 0.265 0.95 -0.85 9 0.40 0.240 0.215 1.10 -1.05 10 0.45 0.300 0.160 1.20 -1.15 11 0.50 0.360 0.100 1.30 -1.20 12 0.55 0.430 0.040 NA NA 5.0.1 Horizontal Mass x1 &lt;- ggplot(lab5, aes(t, x)) + geom_point(col=&quot;red&quot;) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Displacement of the horizontal mass&quot;, x=&quot;Time&quot;, y = &quot;Position&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) x1 Coefficients of the horizontal mass xt &lt;- lm(vx~t, lab5) summary(xt)$coef Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.12 0.01322876 9.071147 1.748825e-05 t 2.40 0.04264014 56.284989 1.101879e-11 slope1 &lt;- round(summary(xt)$coef[2,1],3) intercept1&lt;- round(summary(xt)$coef[1,1],3) ei1 &lt;- round(summary(xt)$coef[1,2],3) es1 &lt;- round(summary(xt)$coef[2,2],3) v1&lt;- ggplot(lab5, aes(t, vx)) + geom_smooth(method=&#39;lm&#39;, formula=y~x, se=FALSE)+ geom_point(col=&quot;red&quot;) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Velocity of horizontal mass&quot;, x=&quot;Time&quot;, y = &quot;Velocity&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) v1 Initial velocity of the horizontal mass \\[ v_x = 0.12 \\pm 0.013 \\frac{m}{s} \\] Acceleration of the horizontal mass \\[ a_x = 2.4 \\pm 0.043 \\frac{m}{s^2} \\] 5.0.2 Hanging Mass y1 &lt;- ggplot(lab5, aes(t, y)) + geom_point(col=&quot;green&quot;) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Displacement of the hanging mass&quot;, x=&quot;Time&quot;, y = &quot;Position&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) y1 Coefficients of the vertical mass yt &lt;- lm(vy~t, lab5) summary(yt)$coef Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -0.05333333 0.02298990 -2.31986 4.893015e-02 t -2.36969697 0.07410315 -31.97836 9.958283e-10 slope2 &lt;- round(summary(yt)$coef[2,1],3) intercept2&lt;- round(summary(yt)$coef[1,1],3) ei2 &lt;- round(summary(yt)$coef[1,2],3) es2 &lt;- round(summary(yt)$coef[2,2],3) v2&lt;- ggplot(lab5, aes(t, vy)) + geom_smooth(method=&#39;lm&#39;, formula=y~x, se=FALSE)+ geom_point(col=&quot;green&quot;) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Velocity of the hanging mass&quot;, x=&quot;Time&quot;, y = &quot;Velocity&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) v2 Initial velocity of the vertical mass \\[ v_y = -0.053 \\pm 0.023 \\frac{m}{s} \\] Acceleration of the vertical mass \\[ a_y = -2.37 \\pm 0.074 \\frac{m}{s^2} \\] "],
["measuring-the-coefficient-of-static-friciton.html", "Chapter 6 Measuring the coefficient of Static Friciton", " Chapter 6 Measuring the coefficient of Static Friciton "],
["lab-6-simple-harmonic-motion.html", "Chapter 7 Lab 6: Simple Harmonic Motion 7.1 Spring Constant 7.2 Data Set 7.3 Plot 7.4 Results 7.5 Spring Oscillator on an Air Track 7.6 Data Set 7.7 Plot 7.8 Results", " Chapter 7 Lab 6: Simple Harmonic Motion 7.1 Spring Constant 7.2 Data Set Mass disp Position Fg 1 0 6.9 0.069 0.000 2 100 5.9 0.059 0.981 3 200 4.7 0.047 1.962 4 300 3.7 0.037 2.943 5 400 2.7 0.027 3.924 Coefficients Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 6.381035 0.08738628 73.02102 5.660228e-06 Position -92.448435 1.74431010 -53.00000 1.479404e-05 7.3 Plot 7.4 Results \\[ k = \\mid -92.448 \\pm 1.744 \\mid \\] 7.5 Spring Oscillator on an Air Track 7.6 Data Set Mass t4 T Tsq 1 0.133 0.99000 0.2475000 0.06125625 2 0.233 1.29000 0.3225000 0.10400625 3 0.333 1.50833 0.3770825 0.14219121 4 0.433 1.72900 0.4322500 0.18684006 5 0.533 1.90400 0.4760000 0.22657600 6 0.633 2.08300 0.5207500 0.27118056 Coefficients Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.005359377 0.001691020 3.169316 3.388000e-02 Mass 0.417708475 0.004032465 103.586395 5.207995e-08 7.7 Plot 7.8 Results \\[ slope = \\mid 0.418 \\pm 0.004 \\mid \\] "],
["lab-8-conservation-of-energy.html", "Chapter 8 Lab 8: Conservation of Energy", " Chapter 8 Lab 8: Conservation of Energy data &lt;- data.frame(tA,xA, tC, xC, tH, xH, tI, xI, tK, xK) height velocity velocitysq 1 0.030 0.474 0.224676 2 0.085 1.000 1.000000 3 0.205 1.902 3.617604 4 0.235 2.027 4.108729 5 0.290 2.309 5.331481 g &lt;- ggplot(data=datav, aes(x=height, y=velocitysq)) + geom_point(col=&quot;red&quot;) + geom_smooth(method=&#39;lm&#39;, se=TRUE) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Velocity Squared vs Height&quot;, x=&quot;Height&quot;, y = &quot;Velocity Squared&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) p &lt;- ggplotly(g) ## `geom_smooth()` using formula &#39;y ~ x&#39; p \\[g = 9.9775 \\pm 0.3335\\] "],
["lab-9-conservation-of-momentum.html", "Chapter 9 Lab 9: Conservation of Momentum 9.1 Elastic Collision 9.2 Inelastic Collision", " Chapter 9 Lab 9: Conservation of Momentum 9.1 Elastic Collision 9.1.1 Both Moving with Same Speed \\[ m_R = m_L = 150g \\] 9.1.1.1 Before Collision Figure 1: Before collision for both carts moving with same speed 9.1.1.2 After Collision Figure 2: After collision for both carts moving at with same speed 9.1.2 Right cart stationary \\[ m_R = m_L = 150g \\] 9.1.2.1 Before Collision Figure 3: Before collision, right cart stationary 9.1.2.2 After Collision ### Right Car moving faster \\[ m_R = m_L = 150g \\] 9.1.2.3 Before Collision Figure 5: Before collision, right cart moving faster 9.1.2.4 After Collision Figure 6: After collision, right cart moving faster 9.2 Inelastic Collision \\[ m_R = m_L = 200g \\] #### Before Collision "],
["lab-10-torque.html", "Chapter 10 Lab 10: Torque", " Chapter 10 Lab 10: Torque Trials Angle Mass_kg Fperp T_calc T_meas Perc_Diff 1 Perp1 90.0 4.54 44.49200 15.57220 15.6 0.1783641 2 Perp2 90.0 15.95 156.31000 54.70850 54.8 0.1671103 3 Perp3 90.0 27.31 267.63800 93.67330 93.8 0.1351659 4 Perp4 90.0 31.86 312.22800 109.27980 109.6 0.2925807 5 AngleT1 111.0 4.54 41.53686 14.53790 14.6 0.4262413 6 AngleT2 113.5 15.95 143.34566 50.17098 50.6 0.8514731 7 AngleT3 80.0 4.54 43.81607 15.33562 15.3 0.2325612 8 AngleT4 82.0 15.95 154.78880 54.17608 54.9 1.3273659 "],
["lab-11-ballistic-pendulum.html", "Chapter 11 Lab 11: Ballistic Pendulum", " Chapter 11 Lab 11: Ballistic Pendulum 11.0.1 Data data &lt;- data.frame(time, position) data time position 1 0.00000 0.00 2 0.00125 0.10 3 0.00250 0.19 4 0.00375 0.31 5 0.00500 0.41 6 0.00625 0.51 fit&lt;- lm(position~time, data) slope &lt;- round(summary(fit)$coef[2,1],3) intercept&lt;- round(summary(fit)$coef[1,1],3) ei &lt;- round(summary(fit)$coef[1,2],3) es &lt;- round(summary(fit)$coef[2,2],3) g &lt;- ggplot(data=data, aes(x=time, y=position)) + geom_point(col=&quot;red&quot;) + geom_smooth(method=&#39;lm&#39;, se=TRUE) + theme(plot.title = element_text(hjust=0.5)) + labs(title = &quot;Position vs Time&quot;, x=&quot;Time&quot;, y = &quot;Position&quot;)+ theme(plot.title = element_text(color=&quot;blue&quot;, size=14, face=&quot;bold&quot;)) p &lt;- ggplotly(g) p \\[ v_o = 82.286 \\pm 1.32 \\frac{m}{s} \\] "],
["lab-12-simple-pendulum.html", "Chapter 12 Lab 12: Simple Pendulum", " Chapter 12 Lab 12: Simple Pendulum Data Table Graph "]
]
